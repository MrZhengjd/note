正数 r = 20 << 2;
	20的二进制补码：0001 0100
	向左移动2位后：  0101 0000
	结果 r = 80;

负数 r = -20 << 2;
	-20的二进制原码：1001 0100
	-20的二进制反码：1110 1011
	-20的二进制补码：1110 1100

	左移两位后的原码：1101 0000
		的反码：1010 1111
		的补码：1011 0000
	
	结果r = -80;

正数： r = 20 >> 2;
	20的二进制补码：0001 0100
	右移2位后原码：  0000 0101
	
	结果r = 5

负数 r = -20 >> 2;
	-20的二进制补码：1001 0100
	右移2位后的原码：1000 0101
	结果 r = -5;


异或运算：以二进制数据为基础进行运算的，异或中同位如果值相同则为0，不同则为1

	int a = 3；
	int b = 8;
	int c = a ^ b;
	
a的二进制数： 0000 0011
b的二进制数： 0000 1000
异或运算后数：0000 1011
所以结果是：11